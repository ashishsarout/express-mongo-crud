apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "express-crud.fullname" . }}
  labels:
    app: {{ template "express-crud.name" . }}
    chart: {{ template "express-crud.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "express-crud.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "express-crud.name" . }}
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      initContainers:
      - name: wait-for-db
        image: "{{ .Values.initContainerImage }}"
        command:
        - 'sh'
        - '-c'
        - >
          until nc -z -w 2 {{ .Release.Name }}-mongodb 27017 && echo mongodb ok;
            do sleep 2;
          done
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: DATABASE_USER
          value: '{{ .Values.mongodb.mongodbUsername }}'
        - name: DATABASE_NAME
          value: '{{ .Values.mongodb.mongodbDatabase }}'
        - name: DATABASE_HOST
          value: '{{ .Release.Name }}-mongodb'
        - name: DATABASE_PORT
          value: '27017'
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mongodb
              key: mongodb-password
        ports:
        - name: http
          containerPort: {{ .Values.service.internalPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: '/health'
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: '/health'
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        resources:
{{ toYaml .Values.resources | indent 10 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
